apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-triggerer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-triggerer
  template:
    metadata:
      labels:
        app: airflow-triggerer
    spec:
      containers:
        - name: airflow-triggerer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["airflow", "triggerer"]
          env:
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}
            - name: AIRFLOW__CELERY__BROKER_URL
              value: redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}/0
            - name: AIRFLOW__CELERY__RESULT_BACKEND
              value: db+postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.secretName }}
                  key: access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.secretName }}
                  key: secret-key
          resources:
            {{- toYaml .Values.triggerer.resources | nindent 12 }}
          volumeMounts:
            - name: dags-volume
              mountPath: /opt/airflow/dags
            - name: airflow-logs
              mountPath: /opt/airflow/logs
            - name: plugins-volume
              mountPath: /opt/airflow/plugins
            - name: tmp-dir
              mountPath: /opt/airflow/dags/tmp
        {{- if .Values.gitSync.enabled }}
        - name: git-sync
          image: "{{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}"
          imagePullPolicy: {{ .Values.gitSync.image.pullPolicy }}
          env:
            - name: GIT_SYNC_REPO
              value: {{ .Values.gitSync.repository }}
            - name: GIT_SYNC_BRANCH
              value: {{ .Values.gitSync.branch }}
            - name: GIT_SYNC_ROOT
              value: /git
            - name: GIT_SYNC_DEST
              value: repo
            - name: GIT_SYNC_WAIT
              value: "{{ .Values.gitSync.wait }}"
            - name: GIT_SYNC_MAX_SYNC_FAILURES
              value: "{{ .Values.gitSync.maxFailures }}"
            - name: GIT_SYNC_ONE_TIME
              value: "false"
          volumeMounts:
            - name: dags-volume
              mountPath: /git
        {{- end }}
      volumes:
        - name: dags-volume
          emptyDir: {}
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs-pvc
        - name: plugins-volume
          emptyDir: {}
        - name: tmp-dir
          emptyDir: {} 