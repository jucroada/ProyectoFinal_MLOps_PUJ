apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlops-postgres
  template:
    metadata:
      labels:
        app: mlops-postgres
    spec:
      containers:
        - name: mlops-postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.postgresql.port }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.password | quote }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgresql.host | quote }}
            - name: PGDATA
              value: {{ printf "%s/%s" .Values.persistence.mountPath .Values.persistence.subPath | quote }}
          volumeMounts:
            - name: postgres-db-volume
              mountPath: {{ .Values.persistence.mountPath }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", {{ .Values.postgresql.username | quote }}]
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", {{ .Values.postgresql.username | quote }}]
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
      volumes:
        - name: postgres-db-volume
          persistentVolumeClaim:
            claimName: postgres-pvc 